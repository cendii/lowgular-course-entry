[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 419
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "yF78y0-9go",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 419
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "yF78y0-9go",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "yF78y0-9go",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "p5q7TRMfuE",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "4iNItQG4M8",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "wx8xbbBKt-",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-component/create: {
	"action": "angular-component/create",
	"params": {
		"name": "employees-faces",
		"entityId": "component"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "wx8xbbBKt-",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/create"
}
[info] [CLI] Calling Command angular-component/create: {
	"funcParams": {
		"name": "employees-faces",
		"entityId": "component"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/create"
}
[info] [CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "employees-faces",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT"
}
[warn] [TsMorphFileAdapter]: File Not Found, creating...: {
	"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.html",
	"level": "warn",
	"message": "[TsMorphFileAdapter]: File Not Found, creating..."
}
[info] [EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED: {
	"type": "COMPONENT_SMART_COMPONENT_CREATED",
	"payload": {
		"createdFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [CommandBus]: Dispatching command CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_COMPONENT_MODULE"
}
[info] [EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED: {
	"event": {
		"createdFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_COMPONENT_MODULE"
}
[info] [CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "employees-faces",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT"
}
[info] [CLI] Called Command angular-component/create: {
	"message": "[CLI] Called Command angular-component/create",
	"level": "info"
}
[info] [API] Response ok: angular-component/create: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "Jcic5swQ6Z",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-service/create: {
	"action": "angular-service/create",
	"params": {
		"name": "Employee",
		"entityId": "dataService"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "Jcic5swQ6Z",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-service/create"
}
[info] [CLI] Calling Command angular-service/create: {
	"funcParams": {
		"name": "Employee",
		"entityId": "dataService"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-service/create"
}
[info] [CommandBus]: Dispatching command CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services",
		"name": "Employee",
		"suffix": "Service"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_SERVICE"
}
[info] [EventBus]: Broadcasting event SERVICE_CREATED: {
	"type": "SERVICE_CREATED",
	"payload": {
		"createdFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event SERVICE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE"
}
[info] [EventBus]: Broadcasted SERVICE_CREATED: {
	"event": {
		"createdFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted SERVICE_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE"
}
[info] [CommandBus]: Handled  CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services",
		"name": "Employee",
		"suffix": "Service"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_SERVICE"
}
[info] [CLI] Called Command angular-service/create: {
	"message": "[CLI] Called Command angular-service/create",
	"level": "info"
}
[info] [API] Response ok: angular-service/create: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-service/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 91
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "T7-bBPUPtu",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 91
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "T7-bBPUPtu",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "T7-bBPUPtu",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 624
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "yQEZ_IF-6t",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 624
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "yQEZ_IF-6t",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject: {
	"action": "injectable/inject",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"injectingPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "yQEZ_IF-6t",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject"
}
[info] [CLI] Calling Command injectable/inject: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"injectingPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject"
}
[info] [CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"injectingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"injectingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject: {
	"message": "[CLI] Called Command injectable/inject",
	"level": "info"
}
[info] [API] Response ok: injectable/inject: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 620
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "QkK91y4TnA",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 620
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeesFacesComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeesFacesComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "QkK91y4TnA",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject: {
	"action": "injectable/inject",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"injectingPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "QkK91y4TnA",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject"
}
[info] [CLI] Calling Command injectable/inject: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"injectingPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject"
}
[info] [CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"injectingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"injectingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject: {
	"message": "[CLI] Called Command injectable/inject",
	"level": "info"
}
[info] [API] Response ok: injectable/inject: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "AsYLV4056F",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/model",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "Person",
		"properties": {
			"personalNumber": "string",
			"name": "string",
			"mail": "string",
			"img": "string"
		},
		"entityId": "model"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "AsYLV4056F",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/model",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "Person",
		"properties": {
			"personalNumber": "string",
			"name": "string",
			"mail": "string",
			"img": "string"
		},
		"entityId": "model"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/model",
		"name": "Person",
		"suffix": "Model",
		"properties": {
			"personalNumber": "string",
			"name": "string",
			"mail": "string",
			"img": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/model",
		"name": "Person",
		"suffix": "Model",
		"properties": {
			"personalNumber": "string",
			"name": "string",
			"mail": "string",
			"img": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/model/person.model.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "iR6l92iVuv",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/model",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "Project",
		"properties": {
			"id": "string",
			"name": "string",
			"owner": "string",
			"description": "string"
		},
		"entityId": "model"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "iR6l92iVuv",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/model",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "Project",
		"properties": {
			"id": "string",
			"name": "string",
			"owner": "string",
			"description": "string"
		},
		"entityId": "model"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/model",
		"name": "Project",
		"suffix": "Model",
		"properties": {
			"id": "string",
			"name": "string",
			"owner": "string",
			"description": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/model",
		"name": "Project",
		"suffix": "Model",
		"properties": {
			"id": "string",
			"name": "string",
			"owner": "string",
			"description": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/model/project.model.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "NF7Xs0cvus",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-service/create: {
	"action": "angular-service/create",
	"params": {
		"name": "Project",
		"entityId": "dataService"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "NF7Xs0cvus",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-service/create"
}
[info] [CLI] Calling Command angular-service/create: {
	"funcParams": {
		"name": "Project",
		"entityId": "dataService"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-service/create"
}
[info] [CommandBus]: Dispatching command CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services",
		"name": "Project",
		"suffix": "Service"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_SERVICE"
}
[info] [EventBus]: Broadcasting event SERVICE_CREATED: {
	"type": "SERVICE_CREATED",
	"payload": {
		"createdFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event SERVICE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE"
}
[info] [EventBus]: Broadcasted SERVICE_CREATED: {
	"event": {
		"createdFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted SERVICE_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE"
}
[info] [CommandBus]: Handled  CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services",
		"name": "Project",
		"suffix": "Service"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_SERVICE"
}
[info] [CLI] Called Command angular-service/create: {
	"message": "[CLI] Called Command angular-service/create",
	"level": "info"
}
[info] [API] Response ok: angular-service/create: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-service/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts",
		"position": 88
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "md-Gig7lss",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts",
		"position": 88
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "ProjectService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "ProjectService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "md-Gig7lss",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "md-Gig7lss",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "ETWlvbCNu4",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-component/create: {
	"action": "angular-component/create",
	"params": {
		"name": "project-list",
		"entityId": "component"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "ETWlvbCNu4",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/create"
}
[info] [CLI] Calling Command angular-component/create: {
	"funcParams": {
		"name": "project-list",
		"entityId": "component"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/create"
}
[info] [CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "project-list",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/project-list",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT"
}
[warn] [TsMorphFileAdapter]: File Not Found, creating...: {
	"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/project-list/project-list.component.html",
	"level": "warn",
	"message": "[TsMorphFileAdapter]: File Not Found, creating..."
}
[info] [EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED: {
	"type": "COMPONENT_SMART_COMPONENT_CREATED",
	"payload": {
		"createdFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/project-list/project-list.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [CommandBus]: Dispatching command CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/project-list/project-list.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_COMPONENT_MODULE"
}
[info] [EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED: {
	"event": {
		"createdFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/project-list/project-list.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/project-list/project-list.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/project-list/project-list.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/project-list/project-list.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_COMPONENT_MODULE"
}
[info] [CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "project-list",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/project-list",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT"
}
[info] [CLI] Called Command angular-component/create: {
	"message": "[CLI] Called Command angular-component/create",
	"level": "info"
}
[info] [API] Response ok: angular-component/create: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/project-list/project-list.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/project-list/project-list.component.ts",
		"position": 595
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "V28lF23whT",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/project-list/project-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/project-list/project-list.component.ts",
		"position": 595
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "ProjectListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "ProjectListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/project-list/project-list.component.ts",
		"position": 593
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "5w9z-8he6a",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/project-list/project-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/project-list/project-list.component.ts",
		"position": 593
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "ProjectListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "ProjectListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/project-list/project-list.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "5w9z-8he6a",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/project-list/project-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/project-list/project-list.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"file": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts",
			"name": "ProjectService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"file": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts",
			"name": "ProjectService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject: {
	"action": "injectable/inject",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/project-list/project-list.component.ts",
		"injectingPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "5w9z-8he6a",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/project-list/project-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject"
}
[info] [CLI] Calling Command injectable/inject: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/project-list/project-list.component.ts",
		"injectingPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject"
}
[info] [CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/project-list/project-list.component.ts",
		"injectingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/project-list/project-list.component.ts",
		"injectingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject: {
	"message": "[CLI] Called Command injectable/inject",
	"level": "info"
}
[info] [API] Response ok: injectable/inject: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/project-list/project-list.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 670
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "etyRg4GPM-",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
		"position": 670
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeesFacesComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeesFacesComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "etyRg4GPM-",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employees-faces/employees-faces.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 646
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "hRwMwFK8bv",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 646
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "hRwMwFK8bv",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts",
			"name": "ProjectService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts",
			"name": "ProjectService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "hRwMwFK8bv",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 722
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "0-7SdJj__n",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 722
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "0-7SdJj__n",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "0-7SdJj__n",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 646
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "3oB6iNUZqo",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 646
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeListComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "3oB6iNUZqo",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "3oB6iNUZqo",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "F2obv8tQ3g",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-component/create: {
	"action": "angular-component/create",
	"params": {
		"name": "EmployeeForm",
		"entityId": "component"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "F2obv8tQ3g",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/create"
}
[info] [CLI] Calling Command angular-component/create: {
	"funcParams": {
		"name": "EmployeeForm",
		"entityId": "component"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/create"
}
[info] [CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "EmployeeForm",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT"
}
[warn] [TsMorphFileAdapter]: File Not Found, creating...: {
	"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.html",
	"level": "warn",
	"message": "[TsMorphFileAdapter]: File Not Found, creating..."
}
[info] [EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED: {
	"type": "COMPONENT_SMART_COMPONENT_CREATED",
	"payload": {
		"createdFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [CommandBus]: Dispatching command CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_COMPONENT_MODULE"
}
[info] [EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED: {
	"event": {
		"createdFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_COMPONENT_MODULE"
}
[info] [CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "EmployeeForm",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT"
}
[info] [CLI] Called Command angular-component/create: {
	"message": "[CLI] Called Command angular-component/create",
	"level": "info"
}
[info] [API] Response ok: angular-component/create: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 317
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "asMx9URI9D",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 317
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 317
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "rdtto0sm6K",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 317
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "rdtto0sm6K",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"file": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts",
			"name": "ProjectService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"file": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts",
			"name": "ProjectService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 317
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "bM62EToNPM",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 317
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 317
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "Rah834jY0E",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 317
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for angular-component/form-properties/add: {
	"action": "angular-component/form-properties/add",
	"params": {
		"propertyName": "employeeForm",
		"componentFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"fields": {
			"name:text": "text",
			"age:number": "text"
		}
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "Rah834jY0E",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/form-properties/add"
}
[info] [CLI] Calling Command angular-component/form-properties/add: {
	"funcParams": {
		"propertyName": "employeeForm",
		"componentFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"fields": {
			"name:text": "text",
			"age:number": "text"
		}
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/form-properties/add"
}
[info] [CommandBus]: Dispatching command SMART_COMPONENT_ADD_FORM_PROPERTY: {
	"commandName": "SMART_COMPONENT_ADD_FORM_PROPERTY",
	"payload": {
		"componentTsFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"propertyName": "employeeForm",
		"fields": {
			"name:text": "text",
			"age:number": "text"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command SMART_COMPONENT_ADD_FORM_PROPERTY"
}
[info] [EventBus]: Broadcasting event SMART_COMPONENT_FORM_ADDED: {
	"type": "SMART_COMPONENT_FORM_ADDED",
	"payload": {
		"componentFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"componentName": "EmployeeFormComponent"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event SMART_COMPONENT_FORM_ADDED"
}
[info] [EventBus]: Broadcasted SMART_COMPONENT_FORM_ADDED: {
	"event": {
		"componentFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"componentName": "EmployeeFormComponent"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted SMART_COMPONENT_FORM_ADDED"
}
[info] [CommandBus]: Dispatching command MODULE_IMPORT_REACTIVE_FORM: {
	"commandName": "MODULE_IMPORT_REACTIVE_FORM",
	"payload": {
		"componentFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"moduleName": "ReactiveFormsModule",
		"declarationModules": [
			{
				"name": "EmployeeFormComponentModule",
				"path": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
			}
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_IMPORT_REACTIVE_FORM"
}
[info] [CommandBus]: Handled  MODULE_IMPORT_REACTIVE_FORM: {
	"commandName": "MODULE_IMPORT_REACTIVE_FORM",
	"payload": {
		"componentFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"moduleName": "ReactiveFormsModule",
		"declarationModules": [
			{
				"name": "EmployeeFormComponentModule",
				"path": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
			}
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_IMPORT_REACTIVE_FORM"
}
[info] [CommandBus]: Handled  SMART_COMPONENT_ADD_FORM_PROPERTY: {
	"commandName": "SMART_COMPONENT_ADD_FORM_PROPERTY",
	"payload": {
		"componentTsFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"propertyName": "employeeForm",
		"fields": {
			"name:text": "text",
			"age:number": "text"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  SMART_COMPONENT_ADD_FORM_PROPERTY"
}
[info] [CLI] Called Command angular-component/form-properties/add: {
	"message": "[CLI] Called Command angular-component/form-properties/add",
	"level": "info"
}
[info] [API] Response ok: angular-component/form-properties/add: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/form-properties/add"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 374
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "DYWM0k8Zlk",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 374
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for angular-component/form-properties/add: {
	"action": "angular-component/form-properties/add",
	"params": {
		"propertyName": "employeeForm",
		"componentFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"fields": {
			"name:text": "text",
			"age:number": "text"
		}
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "DYWM0k8Zlk",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/form-properties/add"
}
[info] [CLI] Calling Command angular-component/form-properties/add: {
	"funcParams": {
		"propertyName": "employeeForm",
		"componentFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"fields": {
			"name:text": "text",
			"age:number": "text"
		}
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/form-properties/add"
}
[info] [CommandBus]: Dispatching command SMART_COMPONENT_ADD_FORM_PROPERTY: {
	"commandName": "SMART_COMPONENT_ADD_FORM_PROPERTY",
	"payload": {
		"componentTsFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"propertyName": "employeeForm",
		"fields": {
			"name:text": "text",
			"age:number": "text"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command SMART_COMPONENT_ADD_FORM_PROPERTY"
}
[info] [EventBus]: Broadcasting event SMART_COMPONENT_FORM_ADDED: {
	"type": "SMART_COMPONENT_FORM_ADDED",
	"payload": {
		"componentFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"componentName": "EmployeeFormComponent"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event SMART_COMPONENT_FORM_ADDED"
}
[info] [EventBus]: Broadcasted SMART_COMPONENT_FORM_ADDED: {
	"event": {
		"componentFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"componentName": "EmployeeFormComponent"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted SMART_COMPONENT_FORM_ADDED"
}
[info] [CommandBus]: Handled  SMART_COMPONENT_ADD_FORM_PROPERTY: {
	"commandName": "SMART_COMPONENT_ADD_FORM_PROPERTY",
	"payload": {
		"componentTsFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"propertyName": "employeeForm",
		"fields": {
			"name:text": "text",
			"age:number": "text"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  SMART_COMPONENT_ADD_FORM_PROPERTY"
}
[info] [CLI] Called Command angular-component/form-properties/add: {
	"message": "[CLI] Called Command angular-component/form-properties/add",
	"level": "info"
}
[info] [API] Response ok: angular-component/form-properties/add: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/form-properties/add"
}
[info] [CommandBus]: Dispatching command MODULE_IMPORT_REACTIVE_FORM: {
	"commandName": "MODULE_IMPORT_REACTIVE_FORM",
	"payload": {
		"componentFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"moduleName": "ReactiveFormsModule",
		"declarationModules": [
			{
				"name": "EmployeeFormComponentModule",
				"path": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
			}
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_IMPORT_REACTIVE_FORM"
}
[info] [CommandBus]: Handled  MODULE_IMPORT_REACTIVE_FORM: {
	"commandName": "MODULE_IMPORT_REACTIVE_FORM",
	"payload": {
		"componentFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"moduleName": "ReactiveFormsModule",
		"declarationModules": [
			{
				"name": "EmployeeFormComponentModule",
				"path": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
			}
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_IMPORT_REACTIVE_FORM"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 374
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "Njm5qegAcq",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 374
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for angular-component/form-properties/add: {
	"action": "angular-component/form-properties/add",
	"params": {
		"propertyName": "emplyeeForm",
		"componentFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"fields": {
			"name:text": "text",
			"age:number": "text"
		}
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "Njm5qegAcq",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/form-properties/add"
}
[info] [CLI] Calling Command angular-component/form-properties/add: {
	"funcParams": {
		"propertyName": "emplyeeForm",
		"componentFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"fields": {
			"name:text": "text",
			"age:number": "text"
		}
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/form-properties/add"
}
[info] [CommandBus]: Dispatching command SMART_COMPONENT_ADD_FORM_PROPERTY: {
	"commandName": "SMART_COMPONENT_ADD_FORM_PROPERTY",
	"payload": {
		"componentTsFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"propertyName": "emplyeeForm",
		"fields": {
			"name:text": "text",
			"age:number": "text"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command SMART_COMPONENT_ADD_FORM_PROPERTY"
}
[info] [EventBus]: Broadcasting event SMART_COMPONENT_FORM_ADDED: {
	"type": "SMART_COMPONENT_FORM_ADDED",
	"payload": {
		"componentFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"componentName": "EmployeeFormComponent"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event SMART_COMPONENT_FORM_ADDED"
}
[info] [EventBus]: Broadcasted SMART_COMPONENT_FORM_ADDED: {
	"event": {
		"componentFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"componentName": "EmployeeFormComponent"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted SMART_COMPONENT_FORM_ADDED"
}
[info] [CommandBus]: Handled  SMART_COMPONENT_ADD_FORM_PROPERTY: {
	"commandName": "SMART_COMPONENT_ADD_FORM_PROPERTY",
	"payload": {
		"componentTsFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"propertyName": "emplyeeForm",
		"fields": {
			"name:text": "text",
			"age:number": "text"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  SMART_COMPONENT_ADD_FORM_PROPERTY"
}
[info] [CLI] Called Command angular-component/form-properties/add: {
	"message": "[CLI] Called Command angular-component/form-properties/add",
	"level": "info"
}
[info] [API] Response ok: angular-component/form-properties/add: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/form-properties/add"
}
[info] [CommandBus]: Dispatching command MODULE_IMPORT_REACTIVE_FORM: {
	"commandName": "MODULE_IMPORT_REACTIVE_FORM",
	"payload": {
		"componentFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"moduleName": "ReactiveFormsModule",
		"declarationModules": [
			{
				"name": "EmployeeFormComponentModule",
				"path": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
			}
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_IMPORT_REACTIVE_FORM"
}
[info] [CommandBus]: Handled  MODULE_IMPORT_REACTIVE_FORM: {
	"commandName": "MODULE_IMPORT_REACTIVE_FORM",
	"payload": {
		"componentFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"moduleName": "ReactiveFormsModule",
		"declarationModules": [
			{
				"name": "EmployeeFormComponentModule",
				"path": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component-module.ts"
			}
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_IMPORT_REACTIVE_FORM"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 387
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "EYKk5jYOPP",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 387
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 385
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "ky5aPOgM3H",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 385
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "TBS9VZjrJX",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "dgkMO0BMO3",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-component/create: {
	"action": "angular-component/create",
	"params": {
		"name": "UserForm",
		"entityId": "component"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "dgkMO0BMO3",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/create"
}
[info] [CLI] Calling Command angular-component/create: {
	"funcParams": {
		"name": "UserForm",
		"entityId": "component"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/create"
}
[info] [CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "UserForm",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/user-form",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command COMPONENT_CREATE_SMART_COMPONENT"
}
[warn] [TsMorphFileAdapter]: File Not Found, creating...: {
	"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/user-form/user-form.component.html",
	"level": "warn",
	"message": "[TsMorphFileAdapter]: File Not Found, creating..."
}
[info] [EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED: {
	"type": "COMPONENT_SMART_COMPONENT_CREATED",
	"payload": {
		"createdFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/user-form/user-form.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [CommandBus]: Dispatching command CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/user-form/user-form.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_COMPONENT_MODULE"
}
[info] [EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED: {
	"event": {
		"createdFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/user-form/user-form.component.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted COMPONENT_SMART_COMPONENT_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/user-form/user-form.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/user-form/user-form.component-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  CREATE_COMPONENT_MODULE: {
	"commandName": "CREATE_COMPONENT_MODULE",
	"payload": {
		"moduleFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/user-form/user-form.component-module.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_COMPONENT_MODULE"
}
[info] [CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT: {
	"commandName": "COMPONENT_CREATE_SMART_COMPONENT",
	"payload": {
		"name": "UserForm",
		"prefix": "app",
		"suffix": "Component",
		"absoluteFolderPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/user-form",
		"config": {
			"stylesExtension": "none",
			"viewEncapsulation": "Emulated",
			"selector": "generated",
			"changeDetectionStrategy": "OnPush"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  COMPONENT_CREATE_SMART_COMPONENT"
}
[info] [CLI] Called Command angular-component/create: {
	"message": "[CLI] Called Command angular-component/create",
	"level": "info"
}
[info] [API] Response ok: angular-component/create: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/user-form/user-form.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/user-form/user-form.component.ts",
		"position": 305
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "tSlwsJq31F",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/user-form/user-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/user-form/user-form.component.ts",
		"position": 305
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "UserFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "UserFormComponent"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for angular-component/form-properties/add: {
	"action": "angular-component/form-properties/add",
	"params": {
		"propertyName": "userForm",
		"componentFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/user-form/user-form.component.ts",
		"fields": {
			"email:text": "text",
			"password:text": "text",
			"name:text": "text"
		}
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "tSlwsJq31F",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/user-form/user-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-component/form-properties/add"
}
[info] [CLI] Calling Command angular-component/form-properties/add: {
	"funcParams": {
		"propertyName": "userForm",
		"componentFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/user-form/user-form.component.ts",
		"fields": {
			"email:text": "text",
			"password:text": "text",
			"name:text": "text"
		}
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-component/form-properties/add"
}
[info] [CommandBus]: Dispatching command SMART_COMPONENT_ADD_FORM_PROPERTY: {
	"commandName": "SMART_COMPONENT_ADD_FORM_PROPERTY",
	"payload": {
		"componentTsFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/user-form/user-form.component.ts",
		"propertyName": "userForm",
		"fields": {
			"email:text": "text",
			"password:text": "text",
			"name:text": "text"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command SMART_COMPONENT_ADD_FORM_PROPERTY"
}
[info] [EventBus]: Broadcasting event SMART_COMPONENT_FORM_ADDED: {
	"type": "SMART_COMPONENT_FORM_ADDED",
	"payload": {
		"componentFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/user-form/user-form.component.ts",
		"componentName": "UserFormComponent"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event SMART_COMPONENT_FORM_ADDED"
}
[info] [EventBus]: Broadcasted SMART_COMPONENT_FORM_ADDED: {
	"event": {
		"componentFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/user-form/user-form.component.ts",
		"componentName": "UserFormComponent"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted SMART_COMPONENT_FORM_ADDED"
}
[info] [CommandBus]: Dispatching command MODULE_IMPORT_REACTIVE_FORM: {
	"commandName": "MODULE_IMPORT_REACTIVE_FORM",
	"payload": {
		"componentFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/user-form/user-form.component.ts",
		"moduleName": "ReactiveFormsModule",
		"declarationModules": [
			{
				"name": "UserFormComponentModule",
				"path": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/user-form/user-form.component-module.ts"
			}
		]
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_IMPORT_REACTIVE_FORM"
}
[info] [CommandBus]: Handled  MODULE_IMPORT_REACTIVE_FORM: {
	"commandName": "MODULE_IMPORT_REACTIVE_FORM",
	"payload": {
		"componentFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/user-form/user-form.component.ts",
		"moduleName": "ReactiveFormsModule",
		"declarationModules": [
			{
				"name": "UserFormComponentModule",
				"path": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/user-form/user-form.component-module.ts"
			}
		]
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_IMPORT_REACTIVE_FORM"
}
[info] [CommandBus]: Handled  SMART_COMPONENT_ADD_FORM_PROPERTY: {
	"commandName": "SMART_COMPONENT_ADD_FORM_PROPERTY",
	"payload": {
		"componentTsFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/user-form/user-form.component.ts",
		"propertyName": "userForm",
		"fields": {
			"email:text": "text",
			"password:text": "text",
			"name:text": "text"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  SMART_COMPONENT_ADD_FORM_PROPERTY"
}
[info] [CLI] Called Command angular-component/form-properties/add: {
	"message": "[CLI] Called Command angular-component/form-properties/add",
	"level": "info"
}
[info] [API] Response ok: angular-component/form-properties/add: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/user-form/user-form.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-component/form-properties/add"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "7SxkdrF0Ru",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for data-structure/create: {
	"action": "data-structure/create",
	"params": {
		"name": "CreateEmployee",
		"properties": {
			"name": "string",
			"age": "number",
			"salary": "string"
		},
		"entityId": "model"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "7SxkdrF0Ru",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for data-structure/create"
}
[info] [CLI] Calling Command data-structure/create: {
	"funcParams": {
		"name": "CreateEmployee",
		"properties": {
			"name": "string",
			"age": "number",
			"salary": "string"
		},
		"entityId": "model"
	},
	"level": "info",
	"message": "[CLI] Calling Command data-structure/create"
}
[info] [CommandBus]: Dispatching command CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/model",
		"name": "CreateEmployee",
		"suffix": "Model",
		"properties": {
			"name": "string",
			"age": "number",
			"salary": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_DATA_STRUCTURE"
}
[info] [CommandBus]: Handled  CREATE_DATA_STRUCTURE: {
	"commandName": "CREATE_DATA_STRUCTURE",
	"payload": {
		"folderPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/model",
		"name": "CreateEmployee",
		"suffix": "Model",
		"properties": {
			"name": "string",
			"age": "number",
			"salary": "string"
		}
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_DATA_STRUCTURE"
}
[info] [CLI] Called Command data-structure/create: {
	"message": "[CLI] Called Command data-structure/create",
	"level": "info"
}
[info] [API] Response ok: data-structure/create: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/model/create-employee.model.ts"
	},
	"level": "info",
	"message": "[API] Response ok: data-structure/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 767
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "wjRfHZigkX",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 767
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent",
			"parentMethod": "onFormSubmitted"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "onFormSubmitted()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"onFormSubmitted"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent",
			"parentMethod": "onFormSubmitted"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "onFormSubmitted()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"onFormSubmitted"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "wjRfHZigkX",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"file": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts",
			"name": "ProjectService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"name": "EmployeeService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"file": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts",
			"name": "ProjectService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject: {
	"action": "injectable/inject",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"injectingPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "wjRfHZigkX",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject"
}
[info] [CLI] Calling Command injectable/inject: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"injectingPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject"
}
[info] [CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"injectingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_SERVICE_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY: {
	"commandName": "INJECT_SERVICE_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"injectingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_SERVICE_DEPENDENCY"
}
[info] [CLI] Called Command injectable/inject: {
	"message": "[CLI] Called Command injectable/inject",
	"level": "info"
}
[info] [API] Response ok: injectable/inject: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 465
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "Nlk6o3rge9",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 465
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 465
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "n0tz97iXTF",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 465
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "n0tz97iXTF",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<CreateEmployeeModel>"
					},
					{
						"name": "Observable<CreateEmployeeModel[]>"
					},
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ProjectModel>"
					},
					{
						"name": "Observable<ProjectModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<CreateEmployeeModel>"
					},
					{
						"name": "Observable<CreateEmployeeModel[]>"
					},
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ProjectModel>"
					},
					{
						"name": "Observable<ProjectModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 465
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "gRh3dqd8Xu",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 465
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "gRh3dqd8Xu",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<CreateEmployeeModel>"
					},
					{
						"name": "Observable<CreateEmployeeModel[]>"
					},
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ProjectModel>"
					},
					{
						"name": "Observable<ProjectModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<CreateEmployeeModel>"
					},
					{
						"name": "Observable<CreateEmployeeModel[]>"
					},
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ProjectModel>"
					},
					{
						"name": "Observable<ProjectModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for method-signature/create: {
	"action": "method-signature/create",
	"params": {
		"name": "create",
		"params": {
			"employee": "CreateEmployeeModel"
		},
		"returnType": "Observable<void>"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "gRh3dqd8Xu",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for method-signature/create"
}
[info] [CLI] Calling Command method-signature/create: {
	"funcParams": {
		"name": "create",
		"params": {
			"employee": "CreateEmployeeModel"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method-signature/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"name": "create",
		"params": {
			"employee": "CreateEmployeeModel"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"name": "create",
		"params": {
			"employee": "CreateEmployeeModel"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method-signature/create: {
	"message": "[CLI] Called Command method-signature/create",
	"level": "info"
}
[info] [API] Response ok: method-signature/create: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: method-signature/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 535
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "B7NbZLFU9C",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 535
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "B7NbZLFU9C",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 531
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "-p5u52FJMy",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 531
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService",
			"parentMethod": "create"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService",
			"parentMethod": "create"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 531
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "ARQv2kSLgd",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 531
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService",
			"parentMethod": "create"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService",
			"parentMethod": "create"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "ARQv2kSLgd",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "ARQv2kSLgd",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 908
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "DsgQya0puG",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
		"position": 908
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent",
			"parentMethod": "onFormSubmitted"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "onFormSubmitted()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onFormSubmitted"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeFormComponent",
			"parentMethod": "onFormSubmitted"
		},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "onFormSubmitted()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"onFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"onFormSubmitted"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"onFormSubmitted"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "DsgQya0puG",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-form/employee-form.component.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"file": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts",
			"name": "ProjectService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"file": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/project.service.ts",
			"name": "ProjectService",
			"type": "ANGULAR_SERVICE",
			"dataType": "Internal"
		},
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		},
		{
			"id": "activatedRoute",
			"dataType": "External",
			"name": "ActivatedRoute",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 475
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "msb6LpTNmE",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 475
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "msb6LpTNmE",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<CreateEmployeeModel>"
					},
					{
						"name": "Observable<CreateEmployeeModel[]>"
					},
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ProjectModel>"
					},
					{
						"name": "Observable<ProjectModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<CreateEmployeeModel>"
					},
					{
						"name": "Observable<CreateEmployeeModel[]>"
					},
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ProjectModel>"
					},
					{
						"name": "Observable<ProjectModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 474
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "cMQeo5eatQ",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 474
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "cMQeo5eatQ",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<CreateEmployeeModel>"
					},
					{
						"name": "Observable<CreateEmployeeModel[]>"
					},
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ProjectModel>"
					},
					{
						"name": "Observable<ProjectModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<CreateEmployeeModel>"
					},
					{
						"name": "Observable<CreateEmployeeModel[]>"
					},
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ProjectModel>"
					},
					{
						"name": "Observable<ProjectModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for method-signature/create: {
	"action": "method-signature/create",
	"params": {
		"name": "create",
		"params": {
			"employee": "CreateEmployeeModel"
		},
		"returnType": "Observable<void>"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "cMQeo5eatQ",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for method-signature/create"
}
[info] [CLI] Calling Command method-signature/create: {
	"funcParams": {
		"name": "create",
		"params": {
			"employee": "CreateEmployeeModel"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method-signature/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"name": "create",
		"params": {
			"employee": "CreateEmployeeModel"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"name": "create",
		"params": {
			"employee": "CreateEmployeeModel"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method-signature/create: {
	"message": "[CLI] Called Command method-signature/create",
	"level": "info"
}
[info] [API] Response ok: method-signature/create: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: method-signature/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 535
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "tMbM_pI9cH",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 535
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 585
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "0517neClHT",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 585
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "0517neClHT",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 585
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "TotcHOR_Bq",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 585
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for flow/create-entity: {
	"action": "flow/create-entity",
	"params": {},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "AzWEDPAYRc",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for flow/create-entity"
}
[info] [CLI] Calling Query flow/create-entity: {
	"funcParams": {},
	"level": "info",
	"message": "[CLI] Calling Query flow/create-entity"
}
[info] [CLI] Called Query flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query flow/create-entity"
}
[info] [API] Response ok: flow/create-entity: {
	"result": {
		"context": {
			"project": {
				"name": "lowgular-course-entry",
				"workspaceRoot": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"root": "",
				"sourceRoot": "src",
				"prefix": "app",
				"codePathFromWorkspaceRoot": "src/app",
				"absoluteCodePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app",
				"absoluteRootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry",
				"rootRoutingFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/app-routing.module.ts",
				"type": "App"
			}
		},
		"steps": [
			{
				"contextId": "entity",
				"title": "What do you want to create?",
				"type": "multi-option",
				"options": {
					"App": [
						{
							"id": "component",
							"suffix": "Component",
							"folder": "ui/$name$",
							"type": "ANGULAR_COMPONENT",
							"insideOf": "App",
							"config": {
								"stylesExtension": "none",
								"viewEncapsulation": "Emulated",
								"selector": "generated",
								"changeDetectionStrategy": "OnPush"
							}
						},
						{
							"id": "dataService",
							"suffix": "Service",
							"folder": "services",
							"type": "ANGULAR_SERVICE",
							"insideOf": "App"
						},
						{
							"id": "model",
							"suffix": "Model",
							"folder": "model",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						},
						{
							"id": "response",
							"suffix": "Response",
							"folder": "services",
							"type": "DATA_STRUCTURE",
							"insideOf": "App"
						}
					],
					"Lib": []
				},
				"param": "project.type",
				"property": "id"
			},
			{
				"contextId": "name",
				"title": "What is the $entity.id$ name?",
				"subtitle": "e.g. user",
				"type": "text-input"
			},
			{
				"conditions": [
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "DATA_STRUCTURE"
					},
					{
						"left": "entity.type",
						"operator": "eq",
						"right": "OBJECT"
					}
				],
				"contextId": "properties",
				"title": "What are the $entity.id$ properties?",
				"subtitle": "Optional: Can be empty... or use csv format e.g. id:number,text:string",
				"type": "multi-input"
			}
		],
		"request": {
			"scope": "entity.type",
			"config": {
				"LIBRARY": {
					"url": "library/create",
					"payload": {
						"name": "name.value"
					}
				},
				"OBJECT": {
					"url": "object/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"DATA_STRUCTURE": {
					"url": "data-structure/create",
					"payload": {
						"name": "name.value",
						"properties": "properties",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_COMPONENT": {
					"url": "angular-component/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_DIRECTIVE": {
					"url": "angular-directive/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_GUARD": {
					"url": "angular-guard/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_RESOLVER": {
					"url": "angular-resolver/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ANGULAR_SERVICE": {
					"url": "angular-service/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				},
				"ABSTRACTION": {
					"url": "abstraction/create",
					"payload": {
						"name": "name.value",
						"entityId": "entity.id"
					}
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: flow/create-entity"
}
[info] [API] Request for angular-service/create: {
	"action": "angular-service/create",
	"params": {
		"name": "EmployeeResponse",
		"entityId": "dataService"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "AzWEDPAYRc",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for angular-service/create"
}
[info] [CLI] Calling Command angular-service/create: {
	"funcParams": {
		"name": "EmployeeResponse",
		"entityId": "dataService"
	},
	"level": "info",
	"message": "[CLI] Calling Command angular-service/create"
}
[info] [CommandBus]: Dispatching command CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services",
		"name": "EmployeeResponse",
		"suffix": "Service"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command CREATE_SERVICE"
}
[info] [EventBus]: Broadcasting event SERVICE_CREATED: {
	"type": "SERVICE_CREATED",
	"payload": {
		"createdFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee-response.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event SERVICE_CREATED"
}
[info] [CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee-response.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command MODULE_CREATE_SERVICE_MODULE"
}
[info] [EventBus]: Broadcasted SERVICE_CREATED: {
	"event": {
		"createdFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee-response.service.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted SERVICE_CREATED"
}
[info] [EventBus]: Broadcasting event MODULE_MODULE_CREATED: {
	"type": "MODULE_MODULE_CREATED",
	"payload": {
		"moduleFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee-response.service-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasting event MODULE_MODULE_CREATED"
}
[info] [EventBus]: Broadcasted MODULE_MODULE_CREATED: {
	"event": {
		"moduleFile": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee-response.service-module.ts"
	},
	"level": "info",
	"message": "[EventBus]: Broadcasted MODULE_MODULE_CREATED"
}
[info] [CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE: {
	"commandName": "MODULE_CREATE_SERVICE_MODULE",
	"payload": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee-response.service.ts"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  MODULE_CREATE_SERVICE_MODULE"
}
[info] [CommandBus]: Handled  CREATE_SERVICE: {
	"commandName": "CREATE_SERVICE",
	"payload": {
		"folderPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services",
		"name": "EmployeeResponse",
		"suffix": "Service"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  CREATE_SERVICE"
}
[info] [CLI] Called Command angular-service/create: {
	"message": "[CLI] Called Command angular-service/create",
	"level": "info"
}
[info] [API] Response ok: angular-service/create: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee-response.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: angular-service/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 784
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "yjdFq6zhjZ",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 784
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService",
			"parentMethod": "create"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService",
			"parentMethod": "create"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee-response.service.ts",
		"position": 45
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "AM0aQyzlfX",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee-response.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee-response.service.ts",
		"position": 45
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 828
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "L8QX-caoDJ",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 828
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "L8QX-caoDJ",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<CreateEmployeeModel>"
					},
					{
						"name": "Observable<CreateEmployeeModel[]>"
					},
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ProjectModel>"
					},
					{
						"name": "Observable<ProjectModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<CreateEmployeeModel>"
					},
					{
						"name": "Observable<CreateEmployeeModel[]>"
					},
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ProjectModel>"
					},
					{
						"name": "Observable<ProjectModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 825
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "L_Qk3YHQ0X",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 825
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Request for rxjs/methods/flow: {
	"action": "rxjs/methods/flow",
	"params": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "L_Qk3YHQ0X",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for rxjs/methods/flow"
}
[info] [CLI] Calling Query rxjs/methods/flow: {
	"funcParams": {
		"actionId": "RXJS_METHOD_CREATE",
		"label": "Create New Method",
		"callPath": []
	},
	"level": "info",
	"message": "[CLI] Calling Query rxjs/methods/flow"
}
[info] [CLI] Called Query rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<CreateEmployeeModel>"
					},
					{
						"name": "Observable<CreateEmployeeModel[]>"
					},
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ProjectModel>"
					},
					{
						"name": "Observable<ProjectModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[CLI] Called Query rxjs/methods/flow"
}
[info] [API] Response ok: rxjs/methods/flow: {
	"result": {
		"context": {},
		"steps": [
			{
				"contextId": "name",
				"title": "What is the method name?",
				"subtitle": "e.g getAll",
				"type": "text-input"
			},
			{
				"contextId": "params",
				"title": "What are the method parameters?",
				"subtitle": "Optional: Can be empty... or csv format",
				"type": "multi-input"
			},
			{
				"contextId": "returnType",
				"title": "Which return type to use?",
				"type": "multi-option",
				"options": [
					{
						"name": "Observable<CreateEmployeeModel>"
					},
					{
						"name": "Observable<CreateEmployeeModel[]>"
					},
					{
						"name": "Observable<EmployeeModel>"
					},
					{
						"name": "Observable<EmployeeModel[]>"
					},
					{
						"name": "Observable<PersonModel>"
					},
					{
						"name": "Observable<PersonModel[]>"
					},
					{
						"name": "Observable<ProjectModel>"
					},
					{
						"name": "Observable<ProjectModel[]>"
					},
					{
						"name": "Observable<ApiResponse>"
					},
					{
						"name": "Observable<ApiResponse[]>"
					},
					{
						"name": "Observable<string>"
					},
					{
						"name": "Observable<string[]>"
					},
					{
						"name": "Observable<number>"
					},
					{
						"name": "Observable<number[]>"
					},
					{
						"name": "Observable<boolean>"
					},
					{
						"name": "Observable<boolean[]>"
					},
					{
						"name": "Observable<void>"
					},
					{
						"name": "Observable<void[]>"
					}
				],
				"extraOptions": [],
				"property": "name"
			}
		],
		"request": {
			"config": {
				"url": "method-signature/create",
				"payload": {
					"name": "name.value",
					"params": "params",
					"returnType": "returnType.name"
				}
			}
		}
	},
	"level": "info",
	"message": "[API] Response ok: rxjs/methods/flow"
}
[info] [API] Request for method-signature/create: {
	"action": "method-signature/create",
	"params": {
		"name": "delete",
		"params": {
			"id": "string"
		},
		"returnType": "Observable<void>"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "L_Qk3YHQ0X",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for method-signature/create"
}
[info] [CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"name": "delete",
		"params": {
			"id": "string"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Calling Command method-signature/create: {
	"funcParams": {
		"name": "delete",
		"params": {
			"id": "string"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CLI] Calling Command method-signature/create"
}
[info] [CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE: {
	"commandName": "ADD_READ_METHOD_SIGNATURE",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"name": "delete",
		"params": {
			"id": "string"
		},
		"returnType": "Observable<void>"
	},
	"level": "info",
	"message": "[CommandBus]: Handled  ADD_READ_METHOD_SIGNATURE"
}
[info] [CLI] Called Command method-signature/create: {
	"message": "[CLI] Called Command method-signature/create",
	"level": "info"
}
[info] [API] Response ok: method-signature/create: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: method-signature/create"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 744
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "-5VjyXL2mK",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"position": 744
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"label": "delete()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"delete"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {
			"parentClass": "EmployeeService"
		},
		"children": [
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "getAll()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"getAll"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"getAll"
								]
							}
						]
					},
					{
						"label": "create()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"create"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"create"
								]
							}
						]
					},
					{
						"label": "delete()",
						"children": [
							{
								"actionId": "RXJS_METHOD_STATEMENT_CREATE",
								"label": "Create Statement",
								"callPath": [
									"delete"
								]
							}
						]
					},
					{
						"actionId": "RXJS_METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [API] Request for injectable/list: {
	"action": "injectable/list",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "-5VjyXL2mK",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/list"
}
[info] [CLI] Calling Query injectable/list: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[CLI] Calling Query injectable/list"
}
[info] [CLI] Called Query injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[CLI] Called Query injectable/list"
}
[info] [API] Response ok: injectable/list: {
	"result": [
		{
			"id": "httpClient",
			"dataType": "External",
			"name": "HttpClient",
			"relatedTypes": {}
		}
	],
	"level": "info",
	"message": "[API] Response ok: injectable/list"
}
[info] [API] Request for injectable/inject-external: {
	"action": "injectable/inject-external",
	"params": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalId": "httpClient"
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "-5VjyXL2mK",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for injectable/inject-external"
}
[info] [CLI] Calling Command injectable/inject-external: {
	"funcParams": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalId": "httpClient"
	},
	"level": "info",
	"message": "[CLI] Calling Command injectable/inject-external"
}
[info] [API] Response ok: injectable/inject-external: {
	"result": {
		"filePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts"
	},
	"level": "info",
	"message": "[API] Response ok: injectable/inject-external"
}
[info] [CLI] Called Command injectable/inject-external: {
	"message": "[CLI] Called Command injectable/inject-external",
	"level": "info"
}
[info] [CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Dispatching command INJECT_EXTERNAL_DEPENDENCY"
}
[info] [CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY: {
	"commandName": "INJECT_EXTERNAL_DEPENDENCY",
	"payload": {
		"entityFilePath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/services/employee.service.ts",
		"externalType": "HttpClient",
		"genericFilePaths": []
	},
	"level": "info",
	"message": "[CommandBus]: Handled  INJECT_EXTERNAL_DEPENDENCY"
}
[info] [API] Request for entity/actions: {
	"action": "entity/actions",
	"params": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 961
	},
	"context": {
		"workspace": {
			"rootPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry"
		},
		"userContext": {
			"id": "63AePRKAEW",
			"correlationId": "_NAaDzAuLc",
			"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
			"logEnvId": "development"
		}
	},
	"level": "info",
	"message": "[API] Request for entity/actions"
}
[info] [CLI] Calling Query entity/actions: {
	"funcParams": {
		"clickedPath": "/Users/katarzynacendlak/WebstormProjects/lowgular-course/lowgular-course-entry/src/app/ui/employee-list/employee-list.component.ts",
		"position": 961
	},
	"level": "info",
	"message": "[CLI] Calling Query entity/actions"
}
[info] [API] Response ok: entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "remove()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"remove"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"remove"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"remove"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[API] Response ok: entity/actions"
}
[info] [CLI] Called Query entity/actions: {
	"result": {
		"context": {},
		"children": [
			{
				"label": "Properties",
				"children": [
					{
						"label": "data$",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Property",
								"callPath": [
									"data$"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Property Side Effect",
								"callPath": [
									"data$"
								]
							}
						]
					},
					{
						"actionId": "ADD_FORM",
						"label": "Create Form Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_CREATE",
						"label": "Create Data Property",
						"callPath": []
					},
					{
						"actionId": "RXJS_PROPERTY_SUBJECT_CREATE",
						"label": "Create Subject Property",
						"callPath": []
					}
				]
			},
			{
				"label": "Inject",
				"actionId": "INJECT",
				"callPath": []
			},
			{
				"label": "Methods",
				"children": [
					{
						"label": "remove()",
						"children": [
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP",
								"label": "Map Statement",
								"callPath": [
									"remove"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_MAP_TO",
								"label": "Map To",
								"callPath": [
									"remove"
								]
							},
							{
								"actionId": "RXJS_CALL_EXPRESSIONS_TAP",
								"label": "Statement Side Effect",
								"callPath": [
									"remove"
								]
							}
						]
					},
					{
						"actionId": "METHOD_CREATE",
						"label": "Create New Method",
						"callPath": []
					}
				]
			},
			{
				"label": "Add Component to Route",
				"actionId": "ADD_TO_ROUTE",
				"callPath": []
			}
		]
	},
	"level": "info",
	"message": "[CLI] Called Query entity/actions"
}
